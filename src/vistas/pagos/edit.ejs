<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar Pago - CARSIL Equipos y Servicios SAC</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Montserrat', sans-serif; }
        .sidebar, .main-content { transition: all 0.3s; }
        .toggle-sidebar-btn {
            position: absolute;
            top: 1.2rem;
            left: 290px;
            z-index: 1100;
            background: var(--primary-color, #0056b3);
            color: #fff;
            border: none;
            border-radius: 50%;
            width: 38px;
            height: 38px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 8px rgba(0,0,0,0.08);
            cursor: pointer;
        }
        .sidebar.hide { transform: translateX(-100%); }
        .main-content.full { margin-left: 0 !important; }
        @media (max-width: 768px) {
            .toggle-sidebar-btn { left: 10px; top: 10px; }
        }
        .sidebar {
            width: 270px;
            min-height: 100vh;
            background: #003366;
            color: #fff;
            position: fixed;
            left: 0;
            top: 0;
            padding-top: 1rem;
        }
        .sidebar .sidebar-heading {
            font-size: 1.5rem;
            font-weight: 700;
            letter-spacing: 2px;
            color: #fff;
        }
        .sidebar .company-slogan {
            font-size: 1rem;
            color: #b0c4de;
        }
        .sidebar .menu-item {
            color: #fff;
            padding: 0.75rem 1.2rem;
            border-radius: 0.5rem;
            margin-bottom: 0.2rem;
            display: flex;
            align-items: center;
            gap: 0.7rem;
            text-decoration: none;
            font-weight: 500;
            transition: background 0.2s;
        }
        .sidebar .menu-item.active, .sidebar .menu-item:hover {
            background: #0056b3;
            color: #fff;
        }
        .sidebar .logout-item {
            color: #ff4d4f;
        }
        .main-content {
            margin-left: 270px;
            min-height: 100vh;
            background: #f8fafc;
        }
        .user-profile {
            display: flex;
            align-items: center;
            gap: 0.7rem;
        }
        .user-avatar {
            background: #003366;
            color: #fff;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 1.2rem;
        }
        .form-section { background: #fff; border-radius: 1rem; box-shadow: 0 2px 12px rgba(0,0,0,0.06); padding: 2rem 2.5rem; margin-bottom: 2rem; }
        .form-section-title { color: #003366; font-weight: 700; margin-bottom: 1.2rem; }
        
        /* Estilos para el total */
        #TotalPago {
            font-size: 1.1rem;
            font-weight: 600;
            text-align: center;
            transition: background-color 0.3s ease;
        }
        
        /* Animaci칩n para campos que se calculan autom치ticamente */
        .campo-calculado {
            position: relative;
        }
        
        .campo-calculado::after {
            content: "游댃";
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            animation: rotation 1s infinite linear;
            opacity: 0;
        }
        
        .campo-calculado.calculando::after {
            opacity: 1;
        }
        
        @keyframes rotation {
            from { transform: translateY(-50%) rotate(0deg); }
            to { transform: translateY(-50%) rotate(359deg); }
        }
    </style>
</head>
<body>
    <div class="wrapper">
        <!-- Sidebar -->
        <nav class="sidebar" id="sidebar">
            <div class="sidebar-heading text-center py-4">
                <div class="company-name">CARSIL</div>
                <div class="company-slogan">Equipos y Servicios SAC</div>
            </div>
            <div class="d-flex flex-column h-100 px-2 py-3">
                <a href="/menu/principal" class="menu-item">
                    <i class="bi bi-house"></i>
                    Inicio
                </a>
                <a href="/proformas" class="menu-item">
                    <i class="bi bi-file-earmark-text"></i>
                    Proformas
                </a>
                <a href="/facturas" class="menu-item">
                    <i class="bi bi-receipt"></i>
                    Facturas
                
                <a href="/clientes" class="menu-item">
                    <i class="bi bi-people"></i>
                    Clientes
                </a>
                <a href="/productos" class="menu-item">
                    <i class="bi bi-box"></i>
                    Productos
                </a>
                <a href="/empleados" class="menu-item">
                    <i class="bi bi-person-badge"></i>
                    Empleados
                </a>
                <a href="/pagos" class="menu-item">
                    <i class="bi bi-cash-coin"></i>
                    Pagos
                </a>
                <a href="/reportes" class="menu-item">
                    <i class="bi bi-bar-chart"></i>
                    Reportes
                </a>
                <a href="/usuarios" class="menu-item">
                    <i class="bi bi-person-circle"></i>
                    Usuarios
                </a>
              
                <a href="/asistencia" class="menu-item">
                    <i class="bi bi-calendar-check"></i>
                    Asistencias
                </a>
                <a href="/empresa" class="menu-item">
                    <i class="bi bi-gear"></i>
                    Empresa
                </a>
                <div class="mt-auto">
                    <a href="/login" class="menu-item logout-item">
                        <i class="bi bi-box-arrow-right"></i>
                        Cerrar Sesi칩n
                    </a>
                </div>
            </div>
        </nav>
        <!-- Bot칩n para ocultar/mostrar barra -->
        <button class="toggle-sidebar-btn" id="toggleSidebarBtn" title="Ocultar/Mostrar men칰">
            <i class="bi bi-chevron-left" id="toggleIcon"></i>
        </button>
        <!-- Main Content -->
        <div class="main-content" id="main-content">
            <nav class="navbar navbar-expand-lg navbar-light bg-white border-bottom">
                <div class="container-fluid">
                    <span class="navbar-brand ms-3">Panel de Control</span>
                    <div class="user-profile ms-auto">
                        <span>Administrador</span>
                        <div class="user-avatar">A</div>
                    </div>
                </div>
            </nav>
            <div class="container-fluid py-4">
                <!-- Mensajes flash eliminados seg칰n solicitud del usuario -->

                
                <div class="form-section">
                    <h1 class="form-section-title"><i class="bi bi-cash-coin me-2"></i> Editar Pago</h1>
                    <form action="/pagos/editar/<%= pago.IdPago %>" method="POST">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="IdEmpleado" class="form-label">Empleado</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                                    <select class="form-select" id="IdEmpleado" name="IdEmpleado" required>
                                        <option value="">Seleccione un empleado</option>
                                        <% if (typeof empleados !== 'undefined' && empleados) { %>
                                            <% empleados.forEach(empleado => { %>
                                                <option value="<%= empleado.IdEmpleado %>" data-sueldo="<%= empleado.SueldoBase %>" data-horasbase="<%= empleado.HorasBase %>" <%= empleado.IdEmpleado == pago.IdEmpleado ? 'selected' : '' %>>
                                                    <%= empleado.Nombres %> <%= empleado.Apellidos %> - S/ <%= empleado.SueldoBase %>
                                                </option>
                                            <% }); %>
                                        <% } %>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label for="Semana" class="form-label">Semana</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calendar-week"></i></span>
                                    <input type="number" class="form-control" id="Semana" name="Semana" min="1" max="53" value="<%= pago.Semana %>" readonly required>
                                    <span class="input-group-text text-muted">
                                        <small>Auto</small>
                                    </span>
                                </div>
                                <small class="form-text text-muted">
                                    Se calcula autom치ticamente desde la fecha de inicio
                                </small>
                            </div>
                            <div class="col-md-3">
                                <label for="Anio" class="form-label">A침o</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                                    <input type="number" class="form-control" id="Anio" name="Anio" min="2020" max="2030" value="<%= pago.Anio %>" readonly required>
                                    <span class="input-group-text text-muted">
                                        <small>Auto</small>
                                    </span>
                                </div>
                                <small class="form-text text-muted">
                                    Se calcula autom치ticamente desde la fecha de inicio
                                </small>
                            </div>
                            <div class="col-md-4">
                                <label for="FechaInicio" class="form-label">Fecha Inicio</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calendar-event"></i></span>
                                    <input type="date" class="form-control" id="FechaInicio" name="FechaInicio" value="<%= pago.FechaInicio ? pago.FechaInicio.toISOString ? pago.FechaInicio.toISOString().substring(0,10) : pago.FechaInicio.substring(0,10) : '' %>" required>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label for="FechaFin" class="form-label">Fecha Fin</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calendar-event"></i></span>
                                    <input type="date" class="form-control" id="FechaFin" name="FechaFin" value="<%= pago.FechaFin ? pago.FechaFin.toISOString ? pago.FechaFin.toISOString().substring(0,10) : pago.FechaFin.substring(0,10) : '' %>" required>
                                </div>
                                <small class="form-text text-muted">
                                    Se sugiere autom치ticamente (puede modificarse)
                                </small>
                            </div>
                            <div class="col-md-4">
                                <label for="FechaPago" class="form-label">Fecha de Pago</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calendar-check"></i></span>
                                    <input type="date" class="form-control" id="FechaPago" name="FechaPago" value="<%= pago.FechaPago ? pago.FechaPago.toISOString ? pago.FechaPago.toISOString().substring(0,10) : pago.FechaPago.substring(0,10) : '' %>">
                                </div>
                                <small class="form-text text-muted">
                                    Opcional - Dejar vac칤o si a칰n no se ha pagado
                                </small>
                            </div>
                            <div class="col-md-6">
                                <label for="HorasTrabajadas" class="form-label">Horas Trabajadas</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-clock-history"></i></span>
                                    <input type="number" step="0.01" class="form-control" id="HorasTrabajadas" name="HorasTrabajadas" value="<%= pago.HorasTrabajadas %>" required>
                                    <span class="input-group-text text-muted">
                                        <small>Editable</small>
                                    </span>
                                </div>
                                <small class="form-text text-muted">
                                    Puede editarse manualmente o recalcularse desde asistencias
                                </small>
                            </div>
                            <div class="col-md-6">
                                <label for="SueldoSemanal" class="form-label">Sueldo Calculado</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-calculator"></i></span>
                                    <input type="number" step="0.01" class="form-control" id="SueldoSemanal" name="SueldoSemanal" value="<%= pago.SueldoSemanal %>" required>
                                    <span class="input-group-text text-muted">
                                        <small>Editable</small>
                                    </span>
                                </div>
                                <small class="form-text text-muted">
                                    Se recalcula autom치ticamente o puede editarse manualmente
                                </small>
                            </div>
                            <div class="col-md-4">
                                <label for="Bonificaciones" class="form-label">Bonificaciones</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-gift"></i></span>
                                    <input type="number" step="0.01" class="form-control" id="Bonificaciones" name="Bonificaciones" value="<%= pago.Bonificaciones %>">
                                </div>
                                <small class="form-text text-muted">
                                    Bonos, incentivos, horas extras, etc.
                                </small>
                            </div>
                            <div class="col-md-4">
                                <label for="Descuentos" class="form-label">Descuentos</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-dash-circle"></i></span>
                                    <input type="number" step="0.01" class="form-control" id="Descuentos" name="Descuentos" value="<%= pago.Descuentos %>">
                                </div>
                                <small class="form-text text-muted">
                                    Tardanzas, faltas, anticipos, etc.
                                </small>
                            </div>
                            <div class="col-md-4">
                                <label for="TotalPago" class="form-label">Total a Pagar</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-cash-stack"></i></span>
                                    <input type="number" step="0.01" class="form-control fw-bold" id="TotalPago" name="TotalPago" value="<%= pago.TotalPago %>" readonly required style="background-color: #f8f9fa; border: 2px solid #28a745;">
                                    <span class="input-group-text text-success fw-bold fs-6">S/</span>
                                </div>
                                <small class="form-text text-success fw-semibold">
                                    <i class="bi bi-calculator me-1"></i>Sueldo + Bonificaciones - Descuentos
                                </small>
                            </div>
                            <div class="col-md-4">
                                <label for="MetodoPago" class="form-label">M칠todo de Pago</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-credit-card"></i></span>
                                    <select class="form-select" id="MetodoPago" name="MetodoPago">
                                        <option value="TRANSFERENCIA" <%= pago.MetodoPago === 'TRANSFERENCIA' ? 'selected' : '' %>>Transferencia Bancaria</option>
                                        <option value="EFECTIVO" <%= pago.MetodoPago === 'EFECTIVO' ? 'selected' : '' %>>Efectivo</option>
                                        <option value="CHEQUE" <%= pago.MetodoPago === 'CHEQUE' ? 'selected' : '' %>>Cheque</option>
                                        <option value="DEPOSITO" <%= pago.MetodoPago === 'DEPOSITO' ? 'selected' : '' %>>Dep칩sito Bancario</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label for="Estado" class="form-label">Estado del Pago</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-toggle-on"></i></span>
                                    <select class="form-select" id="Estado" name="Estado">
                                        <option value="PENDIENTE" <%= pago.Estado === 'PENDIENTE' ? 'selected' : '' %>>Pendiente</option>
                                        <option value="PAGADO" <%= pago.Estado === 'PAGADO' ? 'selected' : '' %>>Pagado</option>
                                        <option value="PARCIAL" <%= pago.Estado === 'PARCIAL' ? 'selected' : '' %>>Pago Parcial</option>
                                        <option value="CANCELADO" <%= pago.Estado === 'CANCELADO' ? 'selected' : '' %>>Cancelado</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label for="SueldoBaseInfo" class="form-label">Sueldo Base Semanal</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-info-circle"></i></span>
                                    <input type="number" step="0.01" class="form-control" id="SueldoBaseInfo" readonly>
                                    <span class="input-group-text">S/</span>
                                </div>
                                <small class="form-text text-muted">
                                    Sueldo base del empleado seleccionado
                                </small>
                            </div>
                            <div class="col-md-12">
                                <label for="Comentarios" class="form-label">Comentarios</label>
                                <textarea class="form-control" id="Comentarios" name="Comentarios" rows="2"><%= pago.Comentarios || '' %></textarea>
                            </div>
                        </div>
                        <div class="d-flex justify-content-end mt-4 gap-2">
                            <a href="/pagos/listar" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle me-2"></i> Cancelar
                            </a>
                            <button type="submit" class="btn btn-primary btn-primary-custom">
                                <i class="bi bi-save me-2"></i> Guardar Cambios
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        // Campos del formulario
        const empleadoSelect = document.getElementById('IdEmpleado');
        const fechaInicio = document.getElementById('FechaInicio');
        const fechaFin = document.getElementById('FechaFin');
        const horasTrabajadas = document.getElementById('HorasTrabajadas');
        const sueldoBaseInfo = document.getElementById('SueldoBaseInfo');
        const sueldoSemanal = document.getElementById('SueldoSemanal');
        const bonificaciones = document.getElementById('Bonificaciones');
        const descuentos = document.getElementById('Descuentos');
        const totalPago = document.getElementById('TotalPago');

        // Funci칩n para obtener el sueldo base del empleado seleccionado
        function obtenerSueldoBaseEmpleado() {
            const selectedOption = empleadoSelect.options[empleadoSelect.selectedIndex];
            if (selectedOption && selectedOption.value) {
                const sueldoBase = parseFloat(selectedOption.getAttribute('data-sueldo')) || 0;
                sueldoBaseInfo.value = sueldoBase.toFixed(2);
                calcularSueldoProporcional();
                return sueldoBase;
            }
            sueldoBaseInfo.value = '';
            return 0;
        }

        // Funci칩n para calcular el sueldo proporcional basado en las horas trabajadas
        function calcularSueldoProporcional() {
            const opcionSeleccionada = empleadoSelect.options[empleadoSelect.selectedIndex];
            const sueldoBase = parseFloat(opcionSeleccionada.getAttribute('data-sueldo')) || 0;
            const horasBase = parseFloat(opcionSeleccionada.getAttribute('data-horasbase')) || 43; // Por defecto 43 si no hay dato
            const horasReales = parseFloat(horasTrabajadas.value) || 0;

            if (sueldoBase > 0 && horasReales > 0 && horasBase > 0) {
                const valorPorHora = sueldoBase / horasBase;
                let sueldoCalculado = valorPorHora * horasReales;
                // Limitar el sueldo calculado al sueldo base semanal
                if (sueldoCalculado > sueldoBase) {
                    sueldoCalculado = sueldoBase;
                }
                sueldoSemanal.value = sueldoCalculado.toFixed(2);
                calcularTotal();
            } else {
                sueldoSemanal.value = '0.00';
            }
        }

        // Funci칩n para calcular el total a pagar
        function calcularTotal() {
            const sueldo = parseFloat(sueldoSemanal.value) || 0;
            const bonos = parseFloat(bonificaciones.value) || 0;
            const descuentosAplicados = parseFloat(descuentos.value) || 0;
            const total = sueldo + bonos - descuentosAplicados;
            totalPago.value = total.toFixed(2);
        }

        // Funci칩n para obtener horas trabajadas desde las asistencias
        async function obtenerHorasDesdeAsistencias() {
            const idEmpleado = empleadoSelect.value;
            const fechaInicioVal = fechaInicio.value;
            const fechaFinVal = fechaFin.value;

            if (!idEmpleado || !fechaInicioVal || !fechaFinVal) {
                horasTrabajadas.value = '0.00';
                calcularSueldoProporcional();
                return;
            }

            try {
                horasTrabajadas.value = 'Calculando...';

                const response = await fetch(`/pagos/api/obtener-horas-trabajadas?IdEmpleado=${idEmpleado}&FechaInicio=${fechaInicioVal}&FechaFin=${fechaFinVal}`);
                const data = await response.json();

                if (data.success) {
                    horasTrabajadas.value = data.horasReales || '0.00';
                    calcularSueldoProporcional();
                } else {
                    horasTrabajadas.value = '0.00';
                    alert(data.message || 'No se encontraron asistencias.');
                }
            } catch (error) {
                console.error('Error al calcular horas:', error);
                horasTrabajadas.value = '0.00';
                alert('Error al calcular horas trabajadas. Intente nuevamente.');
            }
        }

        // Eventos para actualizar los c치lculos
        empleadoSelect.addEventListener('change', function () {
            obtenerSueldoBaseEmpleado();
            obtenerHorasDesdeAsistencias();
        });

        fechaInicio.addEventListener('change', function () {
            obtenerHorasDesdeAsistencias();
        });

        fechaFin.addEventListener('change', obtenerHorasDesdeAsistencias);

        horasTrabajadas.addEventListener('input', function () {
            calcularSueldoProporcional();
        });

        bonificaciones.addEventListener('input', calcularTotal);
        descuentos.addEventListener('input', calcularTotal);

        // Inicializar valores al cargar la p치gina
        obtenerSueldoBaseEmpleado();
        calcularTotal();
    });
    </script>
</body>
</html>
